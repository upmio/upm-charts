ui:
  image:
    # Repository for container
    registry: quay.io
    repository: upmio/upm-ui
    tag: latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    # - name: regcred
    pullSecrets: []

  replicaCount: 1

  service:
    type: ClusterIP
    ports:
      http: 80
    portsName:
      http: "http"
    nodePorts:
      http: ""

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 2
    #   memory: 4G
    # requests:
    #   cpu: 2
  #   memory: 4G

  ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAntiAffinityPreset: soft

  ## node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: "hard"
    ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: "upm.platform.node"
    ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values:
      - "enable"

  ## @param affinity Affinity for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}

  ## Configure extra options for liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param livenessProbe.enabled Enable livenessProbe
  ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## Configure extra options for readiness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param readinessProbe.enabled Enable readinessProbe
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## Configure extra options for startupProbe probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param startupProbe.enabled Enable startupProbe
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1

  ## @param tolerations Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

apiserver:
  # Default values for upm.
  upm:
    mysqlUser:
      name: "upm"
      password: "password"
    serviceGroup:
      elasticsearch:
        enabled: false
      kafka:
        enabled: false
      mysql:
        enabled: false
      postgresql:
        enabled: false
      redis:
        enabled: false
      redis-cluster:
        enabled: false
      zookeeper:
        enabled: false
      cnpg:
        enabled: false

  # Default values for Bitnami MySQL chart.
  mysql:
    ## Bitnami MySQL image
    ## ref: https://hub.docker.com/r/bitnami/mysql/tags/
    ## @param image.registry [default: REGISTRY_NAME] MySQL image registry
    ## @param image.repository [default: REPOSITORY_NAME/mysql] MySQL image repository
    ## @skip image.tag MySQL image tag (immutable tags are recommended)
    ## @param image.digest MySQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param image.pullPolicy MySQL image pull policy
    ## @param image.pullSecrets Specify docker-registry secret names as an array
    ## @param image.debug Specify if debug logs should be enabled
    ##
    image:
      registry: docker.io
      repository: bitnami/mysql
      tag: 8.0.37-debian-12-r2
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      ## Set to true if you would like to see extra information on logs
      ## It turns BASH and/or NAMI debugging in the image
      ##
      debug: false
    ## @param architecture MySQL architecture (`standalone` or `replication`)
    ##
    architecture: "standalone"
    ## MySQL Authentication parameters
    ##
    auth:
      ## @param auth.rootPassword Password for the `root` user. Ignored if existing secret is provided
      ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mysql#setting-the-root-password-on-first-run
      ##
      rootPassword: "password"
      ## @param auth.createDatabase Whether to create the .Values.auth.database or not
      ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mysql#creating-a-database-on-first-run
      ##
      createDatabase: true
    ## @param initdbScriptsConfigMap ConfigMap with the initdb scripts (Note: Overrides `initdbScripts`)
    ##
    initdbScriptsConfigMap: "mysql-initdb-sql"
    ## @section MySQL Primary parameters
    ##
    primary:
      ## @param primary.name Name of the primary database (eg primary, master, leader, ...)
      ##
      name: primary
      ## @param primary.enableMySQLX Enable mysqlx port
      ## ref: https://dev.mysql.com/doc/dev/mysql-server/latest/mysqlx_protocol_xplugin.html
      ##
      enableMySQLX: false
      ## @param primary.configuration [string] Configure MySQL Primary with a custom my.cnf file
      ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
      ##
      configuration: |-
        [mysqld]
        skip-name-resolve
        default_storage_engine=InnoDB
        disabled_storage_engines=MEMORY,BLACKHOLE,MyISAM,CSV,ARCHIVE,FEDERATED
        log_timestamps=SYSTEM
        gtid_mode=ON
        enforce_gtid_consistency=ON
        socket=/opt/bitnami/mysql/tmp/mysql.sock
        datadir=/bitnami/mysql/data
        tmpdir=/opt/bitnami/mysql/tmp
        bind-address=*
        pid_file=/opt/bitnami/mysql/tmp/mysqld.pid
        log_error=/opt/bitnami/mysql/logs/mysqld.log
        port=3306
        character_set_server=utf8mb4
        collation_server=utf8mb4_general_ci
        init_connect='SET NAMES utf8mb4'
        default_time_zone="+8:00"
        connect_timeout=30
        lower_case_table_names=1
        slow_query_log=0
        long_query_time=3.0
        slow_query_log_file=/opt/bitnami/mysql/logs/slow_query.log
        max_connections=30000
        max_connect_errors=1000
        max_allowed_packet=64M
        innodb_buffer_pool_size=4096M
        innodb_sort_buffer_size=8M
        tmp_table_size=64M
        max_heap_table_size=64M
        binlog_expire_logs_auto_purge=ON
        binlog_expire_logs_seconds=604800
  
        [client]
        port=3306
        socket=/opt/bitnami/mysql/tmp/mysql.sock
        default-character-set=utf8mb4
        plugin_dir=/opt/bitnami/mysql/lib/plugin
  
        [manager]
        port=3306
        socket=/opt/bitnami/mysql/tmp/mysql.sock
        pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      service:
        ## @param primary.service.type MySQL Primary K8s service type
        ##
        type: ClusterIP
        ## @param primary.service.ports.mysql MySQL Primary K8s service port
        ## @param primary.service.ports.mysqlx MySQL Primary K8s service mysqlx port
        ##
        ports:
          mysql: 3306
          mysqlx: 33060
        ## @param primary.service.nodePorts.mysql MySQL Primary K8s service node port
        ## @param primary.service.nodePorts.mysqlx MySQL Primary K8s service node port mysqlx
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
        ##
        nodePorts:
          mysql: "32006"
          mysqlx: "32016"
        ## @param primary.service.clusterIP MySQL Primary K8s service clusterIP IP
        ## e.g:
        ## clusterIP: None
        ##
        clusterIP: ""
        ## @param primary.service.loadBalancerIP MySQL Primary loadBalancerIP if service type is `LoadBalancer`
        ## Set the LoadBalancer service type to internal only
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
        ##
        loadBalancerIP: ""
        ## @param primary.service.externalTrafficPolicy Enable client source IP preservation
        ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
        ##
        externalTrafficPolicy: Cluster
        ## @param primary.service.loadBalancerSourceRanges Addresses that are allowed when MySQL Primary service is LoadBalancer
        ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
        ## E.g.
        ## loadBalancerSourceRanges:
        ##   - 10.10.10.0/24
        ##
        loadBalancerSourceRanges: []
        ## @param primary.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
        ##
        extraPorts: []
        ## @param primary.service.annotations Additional custom annotations for MySQL primary service
        ##
        annotations: {}
        ## @param primary.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
        ## If "ClientIP", consecutive client requests will be directed to the same Pod
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
        ##
        sessionAffinity: None
        ## @param primary.service.sessionAffinityConfig Additional settings for the sessionAffinity
        ## sessionAffinityConfig:
        ##   clientIP:
        ##     timeoutSeconds: 300
        ##
        sessionAffinityConfig: {}
        ## Headless service properties
        ##
        headless:
          ## @param primary.service.headless.annotations Additional custom annotations for headless MySQL primary service.
          ##
          annotations: {}
      ## @param primary.containerPorts.mysql Container port for mysql
      ## @param primary.containerPorts.mysqlx Container port for mysqlx
      ##
      containerPorts:
        mysql: 3306
        mysqlx: 33060
      ## MySQL Secondary node affinity preset
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
      ##
      nodeAffinityPreset:
        ## @param secondary.nodeAffinityPreset.type MySQL secondary node affinity preset type. Ignored if `secondary.affinity` is set. Allowed values: `soft` or `hard`
        ##
        type: "hard"
        ## @param secondary.nodeAffinityPreset.key MySQL secondary node label key to match Ignored if `secondary.affinity` is set.
        ## E.g.
        ## key: "kubernetes.io/e2e-az-name"
        ##
        key: "mysql.standalone.node"
        ## @param secondary.nodeAffinityPreset.values MySQL secondary node label values to match. Ignored if `secondary.affinity` is set.
        ## E.g.
        ## values:
        ##   - e2e-az1
        ##   - e2e-az2
        ##
        values:
          - "enable"
      ## MySQL primary container's resource requests and limits
      ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## We usually recommend not to specify default resources and to leave this as a conscious
      ## choice for the user. This also increases chances charts run on environments with little
      ## resources, such as Minikube. If you do want to specify resources, uncomment the following
      ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      ## @param primary.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if primary.resources is set (primary.resources is recommended for production).
      ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
      ##
      resourcesPreset: "medium"
      ## @param primary.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
      ## Example:
      ## resources:
      ##   requests:
      ##     cpu: 2
      ##     memory: 512Mi
      ##   limits:
      ##     cpu: 3
      ##     memory: 1024Mi
      ##
      resources: {}

      ## Enable persistence using Persistent Volume Claims
      ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
      ##
      persistence:
        ## @param primary.persistence.enabled Enable persistence on MySQL primary replicas using a `PersistentVolumeClaim`. If false, use emptyDir
        ##
        enabled: true
        ## @param primary.persistence.existingClaim Name of an existing `PersistentVolumeClaim` for MySQL primary replicas
        ## NOTE: When it's set the rest of persistence parameters are ignored
        ##
        existingClaim: ""
        ## @param primary.persistence.subPath The name of a volume's sub path to mount for persistence
        ##
        subPath: ""
        ## @param primary.persistence.storageClass MySQL primary persistent volume storage Class
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        storageClass: ""
        ## @param primary.persistence.annotations MySQL primary persistent volume claim annotations
        ##
        annotations: {}
        ## @param primary.persistence.accessModes MySQL primary persistent volume access Modes
        ##
        accessModes:
          - ReadWriteOnce
        ## @param primary.persistence.size MySQL primary persistent volume size
        ##
        size: 50Gi
        ## @param primary.persistence.selector Selector to match an existing Persistent Volume
        ## selector:
        ##   matchLabels:
        ##     app: my-app
        ##
        selector: {}

  # Default values for Bitnami Redis chart.
  redis:
    ## Bitnami Redis&reg; image
    ## ref: https://hub.docker.com/r/bitnami/redis/tags/
    ## @param image.registry [default: REGISTRY_NAME] Redis&reg; image registry
    ## @param image.repository [default: REPOSITORY_NAME/redis] Redis&reg; image repository
    ## @skip image.tag Redis&reg; image tag (immutable tags are recommended)
    ## @param image.digest Redis&reg; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param image.pullPolicy Redis&reg; image pull policy
    ## @param image.pullSecrets Redis&reg; image pull secrets
    ## @param image.debug Enable image debug mode
    ##
    image:
      registry: docker.io
      repository: bitnami/redis
      tag: 7.2.5-debian-12-r4
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
      ## Enable debug mode
      ##
      debug: false

    ## @param architecture Redis&reg; architecture. Allowed values: `standalone` or `replication`
    ##
    architecture: "standalone"

    ## Redis&reg; Authentication parameters
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/redis#setting-the-server-password-on-first-run
    ##
    auth:
      ## @param auth.enabled Enable password authentication
      ##
      enabled: true
      ## @param auth.sentinel Enable password authentication on sentinels too
      ##
      sentinel: true
      ## @param auth.password Redis&reg; password
      ## Defaults to a random 10-character alphanumeric string if not set
      ##
      password: "passwords"
      ## @param auth.existingSecret The name of an existing secret with Redis&reg; credentials
      ## NOTE: When it's set, the previous `auth.password` parameter is ignored
      ##
      existingSecret: ""
      ## @param auth.existingSecretPasswordKey Password key to be retrieved from existing secret
      ## NOTE: ignored unless `auth.existingSecret` parameter is set
      ##
      existingSecretPasswordKey: ""
      ## @param auth.usePasswordFiles Mount credentials as files instead of using an environment variable
      ##
      usePasswordFiles: false
      ## @param auth.usePasswordFileFromSecret Mount password file from secret
      ##
      usePasswordFileFromSecret: true

    ## @param commonConfiguration [string] Common configuration to be added into the ConfigMap
    ## ref: https://redis.io/topics/config
    ##
    commonConfiguration: |-
      # Enable AOF https://redis.io/topics/persistence#append-only-file
      appendonly yes
      # Disable RDB persistence, AOF persistence already enabled.
      save ""

    ## @section Redis&reg; master configuration parameters
    ##
    master:
      ## @param master.count Number of Redis&reg; master instances to deploy (experimental, requires additional configuration)
      ##
      count: 1
      ## @param master.configuration Configuration for Redis&reg; master nodes
      ## ref: https://redis.io/topics/config
      ##
      configuration: ""
      ## @param master.disableCommands Array with Redis&reg; commands to disable on master nodes
      ## Commands will be completely disabled by renaming each to an empty string.
      ## ref: https://redis.io/topics/security#disabling-of-specific-commands
      ##
      disableCommands:
        - FLUSHDB
        - FLUSHALL
      ## @param master.containerPorts.redis Container port to open on Redis&reg; master nodes
      ##
      containerPorts:
        redis: 6379
      ## Redis&reg; master resource requests and limits
      ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
      ## @param master.resources.limits The resources limits for the Redis&reg; master containers
      ## @param master.resources.requests The requested resources for the Redis&reg; master containers
      ##
      resources:
        limits: {}
        requests: {}

      ## Node affinity preset
      ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
      ##
      nodeAffinityPreset:
        ## @param replica.nodeAffinityPreset.type Node affinity preset type. Ignored if `replica.affinity` is set. Allowed values: `soft` or `hard`
        ##
        type: "hard"
        ## @param replica.nodeAffinityPreset.key Node label key to match. Ignored if `replica.affinity` is set
        ##
        key: "redis.standalone.node"
        ## @param replica.nodeAffinityPreset.values Node label values to match. Ignored if `replica.affinity` is set
        ## E.g.
        ## values:
        ##   - e2e-az1
        ##   - e2e-az2
        ##
        values:
          - "enable"

      ## Persistence Parameters
      ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
      ##
      persistence:
        ## @param replica.persistence.enabled Enable persistence on Redis&reg; replicas nodes using Persistent Volume Claims
        ##
        enabled: false
        ## @param replica.persistence.medium Provide a medium for `emptyDir` volumes.
        ##
        medium: ""
        ## @param replica.persistence.sizeLimit Set this to enable a size limit for `emptyDir` volumes.
        ##
        sizeLimit: ""
        ##  @param replica.persistence.path The path the volume will be mounted at on Redis&reg; replicas containers
        ## NOTE: Useful when using different Redis&reg; images
        ##
        path: /data
        ## @param replica.persistence.subPath The subdirectory of the volume to mount on Redis&reg; replicas containers
        ## NOTE: Useful in dev environments
        ##
        subPath: ""
        ## @param replica.persistence.subPathExpr Used to construct the subPath subdirectory of the volume to mount on Redis&reg; replicas containers
        ##
        subPathExpr: ""
        ## @param replica.persistence.storageClass Persistent Volume storage class
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
        ##
        storageClass: ""
        ## @param replica.persistence.accessModes Persistent Volume access modes
        ##
        accessModes:
          - ReadWriteOnce
        ## @param replica.persistence.size Persistent Volume size
        ##
        size: 8Gi

      ## Redis&reg; master service parameters
      ##
      service:
        ## @param master.service.type Redis&reg; master service type
        ##
        type: ClusterIP
        ## @param master.service.ports.redis Redis&reg; master service port
        ##
        ports:
          redis: 6379
        ## @param master.service.nodePorts.redis Node port for Redis&reg; master
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
        ## NOTE: choose port between <30000-32767>
        ##
        nodePorts:
          redis: "32007"
        ## @param master.service.externalTrafficPolicy Redis&reg; master service external traffic policy
        ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
        ##
        externalTrafficPolicy: Cluster
        ## @param master.service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
        ##
        extraPorts: []
        ## @param master.service.internalTrafficPolicy Redis&reg; master service internal traffic policy (requires Kubernetes v1.22 or greater to be usable)
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service-traffic-policy/
        ##
        internalTrafficPolicy: Cluster
        ## @param master.service.clusterIP Redis&reg; master service Cluster IP
        ##
        clusterIP: ""
        ## @param master.service.loadBalancerIP Redis&reg; master service Load Balancer IP
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
        ##
        loadBalancerIP: ""
        ## @param master.service.loadBalancerClass master service Load Balancer class if service type is `LoadBalancer` (optional, cloud specific)
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
        ##
        loadBalancerClass: ""
        ## @param master.service.loadBalancerSourceRanges Redis&reg; master service Load Balancer sources
        ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
        ## e.g.
        ## loadBalancerSourceRanges:
        ##   - 10.10.10.0/24
        ##
        loadBalancerSourceRanges: []
        ## @param master.service.externalIPs Redis&reg; master service External IPs
        ## https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
        ## e.g.
        ## externalIPs:
        ##   - 10.10.10.1
        ##   - 201.22.30.1
        ##
        externalIPs: []
        ## @param master.service.annotations Additional custom annotations for Redis&reg; master service
        ##
        annotations: {}
        ## @param master.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
        ## If "ClientIP", consecutive client requests will be directed to the same Pod
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
        ##
        sessionAffinity: None
        ## @param master.service.sessionAffinityConfig Additional settings for the sessionAffinity
        ## sessionAffinityConfig:
        ##   clientIP:
        ##     timeoutSeconds: 300
        ##
        sessionAffinityConfig: {}

  nacos:
    debug: true
    image:
      tag: "v2.4.0"
    nodeAffinityPreset:
      type: "hard"
      key: "nacos.io/control-plane"
      values:
        - "enable"
    replicaCount: 1
    service:
      ## 支持ClusterIP修改为LoadBalancer，反之不允许。可手动修改svc,并将nodePort去掉
      type: ClusterIP  # 一般不用修改, 支持ClusterIP/LoadBalancer/NodePort
      loadBalancerIP: ""
      ## Enable client source IP preservation
      ## @param service.externalTrafficPolicy External traffic policy, configure to Local to preserve client source IP when using an external loadBalancer
      ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster  # 支持Cluster/Local
      ports:
        http:
          port: 8848
        client-rpc:
          port: 9848
        raft-rpc:
          port: 9849
      ## @param service.loadBalancerSourceRanges Addresses that are allowed when service is LoadBalancer
      ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g:
      ## loadBalancerSourceRanges:
      ## - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param service.clusterIP Static clusterIP or None for headless services
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address
      ## e.g:
      ## clusterIP: None
      ##
      clusterIP: ""

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    persistence:
      enabled: true
      storageClass: ""
      size: "50G"
    ingress:
      enabled: false
    extraEnvVars:
      - name: "PREFER_HOST_MODE"
        value: "hostname"
      - name: "TZ"
        value: "Asia/Shanghai"
      - name: "SPRING_DATASOURCE_PLATFORM"
        value: "mysql"
      - name: "NACOS_AUTH_ENABLE"
        value: "true"
      - name: "NACOS_AUTH_IDENTITY_KEY"
        value: "authKey"
      - name: "NACOS_AUTH_IDENTITY_VALUE"
        value: "nacosSecurty"
      - name: "NACOS_AUTH_TOKEN"
        value: "SecretKey012345678901234567890123456789012345678901234567890123456789"
      - name: "JAVA_OPT"
        value: >-
          -Dnacos.core.auth.server.identity.key=nacos
          -Dnacos.core.auth.server.identity.value=nacos
          -Dnacos.core.auth.plugin.nacos.token.secret.key=SecretKey012345678901234567890123456789012345678901234567890123456789
      - name: "MODE"
        value: "standalone"
      - name: "MYSQL_SERVICE_DB_PARAM"
        value: "characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai"
    mysql:
      enabled: false
      external:
        mysqlMasterHost: "upm-mysql"
        mysqlMasterPort: "3306"
        mysqlMasterUser: "nacos"
        mysqlMasterPassword: "password"
        mysqlDatabase: "nacos"
    initDB:
      image:
        registry: "quay.io"
        repository: "upmio/nacos-server-initdb"
        tag: "v2.4.0"

  common:
    image:
      registry: quay.io
      repository: upmio/upm-common
      tag: latest
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

  gateway:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi
    image:
      registry: quay.io
      repository: upmio/upm-gateway-ms
      tag: latest
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    service:
      type: ClusterIP
      ports:
        http: 8080
      portsName:
        http: "http"
      nodePorts:
        http: ""

    # config nacos auth secret name
    nacosSecret: nacos-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  auth:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-auth-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # config nacos auth secret name
    nacosSecret: nacos-info

    # health check port
    healthCheckPort: 8080

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  operatelog:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-operatelog-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    initDB:
      enabled: false

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  resource:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-resource-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    initDB:
      enabled: false

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  user:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi
    image:
      registry: quay.io
      repository: upmio/upm-user-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    # health check port
    healthCheckPort: 8080

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  elasticsearch-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-elasticsearch-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  kafka-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-kafka-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  mysql-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-mysql-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  postgresql-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-postgresql-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset postgresql pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  redis-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-redis-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  redis-cluster-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-redis-cluster-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
      #   cpu: 2
      #   memory: 4G

    ## @param podAntiAffinityPreset pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  zookeeper-ms:
    initContainer:
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
        #   cpu: 500m
        #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-zookeeper-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
    #   cpu: 2
    #   memory: 4G
    # requests:
    #   cpu: 2
    #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

  cnpg-ms:
    initContainer:
      resources: { }
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 500m
        #   memory: 256Mi
        # requests:
      #   cpu: 500m
      #   memory: 256Mi

    image:
      registry: quay.io
      repository: upmio/upm-service-cnpg-ms
      tag: v1.2.1
      digest: ""
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: [ ]

    replicaCount: 1

    # health check port
    healthCheckPort: 8080

    # config nacos auth secret name
    nacosSecret: nacos-info

    # config mysql auth secret name
    mysqlSecret: mysql-info

    resources: { }
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 2
      #   memory: 4G
      # requests:
    #   cpu: 2
    #   memory: 4G

    ## @param podAntiAffinityPreset postgresql pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: "hard"
      ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: "upm.platform.node"
      ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values:
        - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
    affinity: { }

    ## Configure extra options for liveness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for readiness probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param readinessProbe.enabled Enable readinessProbe
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Configure extra options for startupProbe probe
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param startupProbe.enabled Enable startupProbe
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 15
      successThreshold: 1

    ## @param tolerations Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: [ ]

nginx:
  enabled: true
  replicaCount: 1
  image:
    # Repository for container
    registry: quay.io
    repository: upm/nginx
    tag: 1.26
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    # - name: regcred
    pullSecrets: []

  service:
    type: ClusterIP
    ports:
      http: 80
    portsName:
      http: "http"
    nodePorts:
      http: 32010

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 2
    #   memory: 4G
    # requests:
    #   cpu: 2
    #   memory: 4G

    ## @param podAntiAffinityPreset MySQL pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
  podAntiAffinityPreset: soft
    ## node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
  nodeAffinityPreset:
    ## @param nodeAffinityPreset.type node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: "hard"
    ## @param nodeAffinityPreset.key node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: "upm.platform.node"
    ## @param nodeAffinityPreset.values node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values:
      - "enable"

    ## @param affinity Affinity for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
    ##
  affinity: {}

  ## Configure extra options for liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param livenessProbe.enabled Enable livenessProbe
  ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## Configure extra options for readiness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param readinessProbe.enabled Enable readinessProbe
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

  ## Configure extra options for startupProbe probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param startupProbe.enabled Enable startupProbe
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param startupProbe.periodSeconds Period seconds for startupProbe## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe## @param startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1

  ## @param tolerations Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []